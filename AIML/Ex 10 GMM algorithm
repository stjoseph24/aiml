import matplotlib.pyplot as plt 
from sklearn import datasets 
import sklearn.metrics as sm 
import pandas as pd
import numpy as np
%matplotlib inline
 iris = datasets.load_iris()

X = pd.DataFrame(iris.data)

X.columns = ['Sepal_Length','Sepal_Width','Petal_Length','Petal_Width']

y = pd.DataFrame(iris.target) y.columns = ['Targets']
plt.figure(figsize=(14,7)) 
colormap = np.array(['red', 'lime', 'black'])
plt.subplot(1, 2, 1)
plt.scatter(X.Sepal_Length,X.Sepal_Width, c=colormap[y.Targets], s=40) 
plt.title('Sepal')
plt.subplot(1, 2, 2)
plt.scatter(X.Petal_Length,X.Petal_Width, c=colormap[y.Targets], s=40) 
plt.title('Petal')


from sklearn import preprocessing 
scaler = preprocessing.StandardScaler() 
scaler.fit(X)
xsa = scaler.transform(X)
xs = pd.DataFrame(xsa, columns = X.columns) 
xs.sample(5)


from sklearn.mixture import GaussianMixture 
gmm = GaussianMixture(n_components=3) 
gmm.fit(xs)
y_cluster_gmm = gmm.predict(xs) 
y_cluster_gmm
plt.subplot(1, 2, 1)
plt.scatter(X.Petal_Length, X.Petal_Width, c=colormap[y_cluster_gmm], s=40) 
plt.title('GMM Classification')

sm.accuracy_score(y, y_cluster_gmm) 
sm.confusion_matrix(y, y_cluster_gmm)
